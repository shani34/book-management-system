basePath: /api/v1
definitions:
  github_com_shani34_book-management-system_internal_models.Book:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  github_com_shani34_book-management-system_internal_models.BookRequest:
    properties:
      author:
        example: Alan A. A. Donovan
        type: string
      title:
        example: The Go Programming Language
        type: string
      year:
        example: 2015
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@bookapi.com
    name: API Support
  description: REST API for managing books with Redis caching and Kafka integration
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Book Management API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get paginated list of books
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create new book
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.BookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shani34_book-management-system_internal_models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update book
      tags:
      - books
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
